{static auto __glActiveTexture = (decltype(glActiveTexture)) procFunc( "glActiveTexture" ); if( __glActiveTexture ) { overrides["glActiveTexture"] = wrapOpenGLES<& __glActiveTexture >::Get();}}
{static auto __glAttachShader = (decltype(glAttachShader)) procFunc( "glAttachShader" ); if( __glAttachShader ) { overrides["glAttachShader"] = wrapOpenGLES<& __glAttachShader >::Get();}}
{static auto __glBindAttribLocation = (decltype(glBindAttribLocation)) procFunc( "glBindAttribLocation" ); if( __glBindAttribLocation ) { overrides["glBindAttribLocation"] = wrapOpenGLES<& __glBindAttribLocation >::Get();}}
{static auto __glBindBuffer = (decltype(glBindBuffer)) procFunc( "glBindBuffer" ); if( __glBindBuffer ) { overrides["glBindBuffer"] = wrapOpenGLES<& __glBindBuffer >::Get();}}
{static auto __glBindFramebuffer = (decltype(glBindFramebuffer)) procFunc( "glBindFramebuffer" ); if( __glBindFramebuffer ) { overrides["glBindFramebuffer"] = wrapOpenGLES<& __glBindFramebuffer >::Get();}}
{static auto __glBindRenderbuffer = (decltype(glBindRenderbuffer)) procFunc( "glBindRenderbuffer" ); if( __glBindRenderbuffer ) { overrides["glBindRenderbuffer"] = wrapOpenGLES<& __glBindRenderbuffer >::Get();}}
{static auto __glBindTexture = (decltype(glBindTexture)) procFunc( "glBindTexture" ); if( __glBindTexture ) { overrides["glBindTexture"] = wrapOpenGLES<& __glBindTexture >::Get();}}
{static auto __glBlendColor = (decltype(glBlendColor)) procFunc( "glBlendColor" ); if( __glBlendColor ) { overrides["glBlendColor"] = wrapOpenGLES<& __glBlendColor >::Get();}}
{static auto __glBlendEquation = (decltype(glBlendEquation)) procFunc( "glBlendEquation" ); if( __glBlendEquation ) { overrides["glBlendEquation"] = wrapOpenGLES<& __glBlendEquation >::Get();}}
{static auto __glBlendEquationSeparate = (decltype(glBlendEquationSeparate)) procFunc( "glBlendEquationSeparate" ); if( __glBlendEquationSeparate ) { overrides["glBlendEquationSeparate"] = wrapOpenGLES<& __glBlendEquationSeparate >::Get();}}
{static auto __glBlendFunc = (decltype(glBlendFunc)) procFunc( "glBlendFunc" ); if( __glBlendFunc ) { overrides["glBlendFunc"] = wrapOpenGLES<& __glBlendFunc >::Get();}}
{static auto __glBlendFuncSeparate = (decltype(glBlendFuncSeparate)) procFunc( "glBlendFuncSeparate" ); if( __glBlendFuncSeparate ) { overrides["glBlendFuncSeparate"] = wrapOpenGLES<& __glBlendFuncSeparate >::Get();}}
{static auto __glBufferData = (decltype(glBufferData)) procFunc( "glBufferData" ); if( __glBufferData ) { overrides["glBufferData"] = wrapOpenGLES<& __glBufferData >::Get();}}
{static auto __glBufferSubData = (decltype(glBufferSubData)) procFunc( "glBufferSubData" ); if( __glBufferSubData ) { overrides["glBufferSubData"] = wrapOpenGLES<& __glBufferSubData >::Get();}}
{static auto __glCheckFramebufferStatus = (decltype(glCheckFramebufferStatus)) procFunc( "glCheckFramebufferStatus" ); if( __glCheckFramebufferStatus ) { overrides["glCheckFramebufferStatus"] = wrapOpenGLES<& __glCheckFramebufferStatus >::Get();}}
{static auto __glClear = (decltype(glClear)) procFunc( "glClear" ); if( __glClear ) { overrides["glClear"] = wrapOpenGLES<& __glClear >::Get();}}
{static auto __glClearColor = (decltype(glClearColor)) procFunc( "glClearColor" ); if( __glClearColor ) { overrides["glClearColor"] = wrapOpenGLES<& __glClearColor >::Get();}}
{static auto __glClearDepthf = (decltype(glClearDepthf)) procFunc( "glClearDepthf" ); if( __glClearDepthf ) { overrides["glClearDepthf"] = wrapOpenGLES<& __glClearDepthf >::Get();}}
{static auto __glClearStencil = (decltype(glClearStencil)) procFunc( "glClearStencil" ); if( __glClearStencil ) { overrides["glClearStencil"] = wrapOpenGLES<& __glClearStencil >::Get();}}
{static auto __glColorMask = (decltype(glColorMask)) procFunc( "glColorMask" ); if( __glColorMask ) { overrides["glColorMask"] = wrapOpenGLES<& __glColorMask >::Get();}}
{static auto __glCompileShader = (decltype(glCompileShader)) procFunc( "glCompileShader" ); if( __glCompileShader ) { overrides["glCompileShader"] = wrapOpenGLES<& __glCompileShader >::Get();}}
{static auto __glCompressedTexImage2D = (decltype(glCompressedTexImage2D)) procFunc( "glCompressedTexImage2D" ); if( __glCompressedTexImage2D ) { overrides["glCompressedTexImage2D"] = wrapOpenGLES<& __glCompressedTexImage2D >::Get();}}
{static auto __glCompressedTexSubImage2D = (decltype(glCompressedTexSubImage2D)) procFunc( "glCompressedTexSubImage2D" ); if( __glCompressedTexSubImage2D ) { overrides["glCompressedTexSubImage2D"] = wrapOpenGLES<& __glCompressedTexSubImage2D >::Get();}}
{static auto __glCopyTexImage2D = (decltype(glCopyTexImage2D)) procFunc( "glCopyTexImage2D" ); if( __glCopyTexImage2D ) { overrides["glCopyTexImage2D"] = wrapOpenGLES<& __glCopyTexImage2D >::Get();}}
{static auto __glCopyTexSubImage2D = (decltype(glCopyTexSubImage2D)) procFunc( "glCopyTexSubImage2D" ); if( __glCopyTexSubImage2D ) { overrides["glCopyTexSubImage2D"] = wrapOpenGLES<& __glCopyTexSubImage2D >::Get();}}
{static auto __glCreateProgram = (decltype(glCreateProgram)) procFunc( "glCreateProgram" ); if( __glCreateProgram ) { overrides["glCreateProgram"] = wrapOpenGLES<& __glCreateProgram >::Get();}}
{static auto __glCreateShader = (decltype(glCreateShader)) procFunc( "glCreateShader" ); if( __glCreateShader ) { overrides["glCreateShader"] = wrapOpenGLES<& __glCreateShader >::Get();}}
{static auto __glCullFace = (decltype(glCullFace)) procFunc( "glCullFace" ); if( __glCullFace ) { overrides["glCullFace"] = wrapOpenGLES<& __glCullFace >::Get();}}
{static auto __glDeleteBuffers = (decltype(glDeleteBuffers)) procFunc( "glDeleteBuffers" ); if( __glDeleteBuffers ) { overrides["glDeleteBuffers"] = wrapOpenGLES<& __glDeleteBuffers >::Get();}}
{static auto __glDeleteFramebuffers = (decltype(glDeleteFramebuffers)) procFunc( "glDeleteFramebuffers" ); if( __glDeleteFramebuffers ) { overrides["glDeleteFramebuffers"] = wrapOpenGLES<& __glDeleteFramebuffers >::Get();}}
{static auto __glDeleteProgram = (decltype(glDeleteProgram)) procFunc( "glDeleteProgram" ); if( __glDeleteProgram ) { overrides["glDeleteProgram"] = wrapOpenGLES<& __glDeleteProgram >::Get();}}
{static auto __glDeleteRenderbuffers = (decltype(glDeleteRenderbuffers)) procFunc( "glDeleteRenderbuffers" ); if( __glDeleteRenderbuffers ) { overrides["glDeleteRenderbuffers"] = wrapOpenGLES<& __glDeleteRenderbuffers >::Get();}}
{static auto __glDeleteShader = (decltype(glDeleteShader)) procFunc( "glDeleteShader" ); if( __glDeleteShader ) { overrides["glDeleteShader"] = wrapOpenGLES<& __glDeleteShader >::Get();}}
{static auto __glDeleteTextures = (decltype(glDeleteTextures)) procFunc( "glDeleteTextures" ); if( __glDeleteTextures ) { overrides["glDeleteTextures"] = wrapOpenGLES<& __glDeleteTextures >::Get();}}
{static auto __glDepthFunc = (decltype(glDepthFunc)) procFunc( "glDepthFunc" ); if( __glDepthFunc ) { overrides["glDepthFunc"] = wrapOpenGLES<& __glDepthFunc >::Get();}}
{static auto __glDepthMask = (decltype(glDepthMask)) procFunc( "glDepthMask" ); if( __glDepthMask ) { overrides["glDepthMask"] = wrapOpenGLES<& __glDepthMask >::Get();}}
{static auto __glDepthRangef = (decltype(glDepthRangef)) procFunc( "glDepthRangef" ); if( __glDepthRangef ) { overrides["glDepthRangef"] = wrapOpenGLES<& __glDepthRangef >::Get();}}
{static auto __glDetachShader = (decltype(glDetachShader)) procFunc( "glDetachShader" ); if( __glDetachShader ) { overrides["glDetachShader"] = wrapOpenGLES<& __glDetachShader >::Get();}}
{static auto __glDisable = (decltype(glDisable)) procFunc( "glDisable" ); if( __glDisable ) { overrides["glDisable"] = wrapOpenGLES<& __glDisable >::Get();}}
{static auto __glDisableVertexAttribArray = (decltype(glDisableVertexAttribArray)) procFunc( "glDisableVertexAttribArray" ); if( __glDisableVertexAttribArray ) { overrides["glDisableVertexAttribArray"] = wrapOpenGLES<& __glDisableVertexAttribArray >::Get();}}
{static auto __glDrawArrays = (decltype(glDrawArrays)) procFunc( "glDrawArrays" ); if( __glDrawArrays ) { overrides["glDrawArrays"] = wrapOpenGLES<& __glDrawArrays >::Get();}}
{static auto __glDrawElements = (decltype(glDrawElements)) procFunc( "glDrawElements" ); if( __glDrawElements ) { overrides["glDrawElements"] = wrapOpenGLES<& __glDrawElements >::Get();}}
{static auto __glEnable = (decltype(glEnable)) procFunc( "glEnable" ); if( __glEnable ) { overrides["glEnable"] = wrapOpenGLES<& __glEnable >::Get();}}
{static auto __glEnableVertexAttribArray = (decltype(glEnableVertexAttribArray)) procFunc( "glEnableVertexAttribArray" ); if( __glEnableVertexAttribArray ) { overrides["glEnableVertexAttribArray"] = wrapOpenGLES<& __glEnableVertexAttribArray >::Get();}}
{static auto __glFinish = (decltype(glFinish)) procFunc( "glFinish" ); if( __glFinish ) { overrides["glFinish"] = wrapOpenGLES<& __glFinish >::Get();}}
{static auto __glFlush = (decltype(glFlush)) procFunc( "glFlush" ); if( __glFlush ) { overrides["glFlush"] = wrapOpenGLES<& __glFlush >::Get();}}
{static auto __glFramebufferRenderbuffer = (decltype(glFramebufferRenderbuffer)) procFunc( "glFramebufferRenderbuffer" ); if( __glFramebufferRenderbuffer ) { overrides["glFramebufferRenderbuffer"] = wrapOpenGLES<& __glFramebufferRenderbuffer >::Get();}}
{static auto __glFramebufferTexture2D = (decltype(glFramebufferTexture2D)) procFunc( "glFramebufferTexture2D" ); if( __glFramebufferTexture2D ) { overrides["glFramebufferTexture2D"] = wrapOpenGLES<& __glFramebufferTexture2D >::Get();}}
{static auto __glFrontFace = (decltype(glFrontFace)) procFunc( "glFrontFace" ); if( __glFrontFace ) { overrides["glFrontFace"] = wrapOpenGLES<& __glFrontFace >::Get();}}
{static auto __glGenBuffers = (decltype(glGenBuffers)) procFunc( "glGenBuffers" ); if( __glGenBuffers ) { overrides["glGenBuffers"] = wrapOpenGLES<& __glGenBuffers >::Get();}}
{static auto __glGenerateMipmap = (decltype(glGenerateMipmap)) procFunc( "glGenerateMipmap" ); if( __glGenerateMipmap ) { overrides["glGenerateMipmap"] = wrapOpenGLES<& __glGenerateMipmap >::Get();}}
{static auto __glGenFramebuffers = (decltype(glGenFramebuffers)) procFunc( "glGenFramebuffers" ); if( __glGenFramebuffers ) { overrides["glGenFramebuffers"] = wrapOpenGLES<& __glGenFramebuffers >::Get();}}
{static auto __glGenRenderbuffers = (decltype(glGenRenderbuffers)) procFunc( "glGenRenderbuffers" ); if( __glGenRenderbuffers ) { overrides["glGenRenderbuffers"] = wrapOpenGLES<& __glGenRenderbuffers >::Get();}}
{static auto __glGenTextures = (decltype(glGenTextures)) procFunc( "glGenTextures" ); if( __glGenTextures ) { overrides["glGenTextures"] = wrapOpenGLES<& __glGenTextures >::Get();}}
{static auto __glGetActiveAttrib = (decltype(glGetActiveAttrib)) procFunc( "glGetActiveAttrib" ); if( __glGetActiveAttrib ) { overrides["glGetActiveAttrib"] = wrapOpenGLES<& __glGetActiveAttrib >::Get();}}
{static auto __glGetActiveUniform = (decltype(glGetActiveUniform)) procFunc( "glGetActiveUniform" ); if( __glGetActiveUniform ) { overrides["glGetActiveUniform"] = wrapOpenGLES<& __glGetActiveUniform >::Get();}}
{static auto __glGetAttachedShaders = (decltype(glGetAttachedShaders)) procFunc( "glGetAttachedShaders" ); if( __glGetAttachedShaders ) { overrides["glGetAttachedShaders"] = wrapOpenGLES<& __glGetAttachedShaders >::Get();}}
{static auto __glGetAttribLocation = (decltype(glGetAttribLocation)) procFunc( "glGetAttribLocation" ); if( __glGetAttribLocation ) { overrides["glGetAttribLocation"] = wrapOpenGLES<& __glGetAttribLocation >::Get();}}
{static auto __glGetBooleanv = (decltype(glGetBooleanv)) procFunc( "glGetBooleanv" ); if( __glGetBooleanv ) { overrides["glGetBooleanv"] = wrapOpenGLES<& __glGetBooleanv >::Get();}}
{static auto __glGetBufferParameteriv = (decltype(glGetBufferParameteriv)) procFunc( "glGetBufferParameteriv" ); if( __glGetBufferParameteriv ) { overrides["glGetBufferParameteriv"] = wrapOpenGLES<& __glGetBufferParameteriv >::Get();}}
{static auto __glGetError = (decltype(glGetError)) procFunc( "glGetError" ); if( __glGetError ) { overrides["glGetError"] = wrapOpenGLES<& __glGetError >::Get();}}
{static auto __glGetFloatv = (decltype(glGetFloatv)) procFunc( "glGetFloatv" ); if( __glGetFloatv ) { overrides["glGetFloatv"] = wrapOpenGLES<& __glGetFloatv >::Get();}}
{static auto __glGetFramebufferAttachmentParameteriv = (decltype(glGetFramebufferAttachmentParameteriv)) procFunc( "glGetFramebufferAttachmentParameteriv" ); if( __glGetFramebufferAttachmentParameteriv ) { overrides["glGetFramebufferAttachmentParameteriv"] = wrapOpenGLES<& __glGetFramebufferAttachmentParameteriv >::Get();}}
{static auto __glGetIntegerv = (decltype(glGetIntegerv)) procFunc( "glGetIntegerv" ); if( __glGetIntegerv ) { overrides["glGetIntegerv"] = wrapOpenGLES<& __glGetIntegerv >::Get();}}
{static auto __glGetProgramiv = (decltype(glGetProgramiv)) procFunc( "glGetProgramiv" ); if( __glGetProgramiv ) { overrides["glGetProgramiv"] = wrapOpenGLES<& __glGetProgramiv >::Get();}}
{static auto __glGetProgramInfoLog = (decltype(glGetProgramInfoLog)) procFunc( "glGetProgramInfoLog" ); if( __glGetProgramInfoLog ) { overrides["glGetProgramInfoLog"] = wrapOpenGLES<& __glGetProgramInfoLog >::Get();}}
{static auto __glGetRenderbufferParameteriv = (decltype(glGetRenderbufferParameteriv)) procFunc( "glGetRenderbufferParameteriv" ); if( __glGetRenderbufferParameteriv ) { overrides["glGetRenderbufferParameteriv"] = wrapOpenGLES<& __glGetRenderbufferParameteriv >::Get();}}
{static auto __glGetShaderiv = (decltype(glGetShaderiv)) procFunc( "glGetShaderiv" ); if( __glGetShaderiv ) { overrides["glGetShaderiv"] = wrapOpenGLES<& __glGetShaderiv >::Get();}}
{static auto __glGetShaderInfoLog = (decltype(glGetShaderInfoLog)) procFunc( "glGetShaderInfoLog" ); if( __glGetShaderInfoLog ) { overrides["glGetShaderInfoLog"] = wrapOpenGLES<& __glGetShaderInfoLog >::Get();}}
{static auto __glGetShaderPrecisionFormat = (decltype(glGetShaderPrecisionFormat)) procFunc( "glGetShaderPrecisionFormat" ); if( __glGetShaderPrecisionFormat ) { overrides["glGetShaderPrecisionFormat"] = wrapOpenGLES<& __glGetShaderPrecisionFormat >::Get();}}
{static auto __glGetShaderSource = (decltype(glGetShaderSource)) procFunc( "glGetShaderSource" ); if( __glGetShaderSource ) { overrides["glGetShaderSource"] = wrapOpenGLES<& __glGetShaderSource >::Get();}}
{static auto __glGetString = (decltype(glGetString)) procFunc( "glGetString" ); if( __glGetString ) { overrides["glGetString"] = wrapOpenGLES<& __glGetString >::Get();}}
{static auto __glGetTexParameterfv = (decltype(glGetTexParameterfv)) procFunc( "glGetTexParameterfv" ); if( __glGetTexParameterfv ) { overrides["glGetTexParameterfv"] = wrapOpenGLES<& __glGetTexParameterfv >::Get();}}
{static auto __glGetTexParameteriv = (decltype(glGetTexParameteriv)) procFunc( "glGetTexParameteriv" ); if( __glGetTexParameteriv ) { overrides["glGetTexParameteriv"] = wrapOpenGLES<& __glGetTexParameteriv >::Get();}}
{static auto __glGetUniformfv = (decltype(glGetUniformfv)) procFunc( "glGetUniformfv" ); if( __glGetUniformfv ) { overrides["glGetUniformfv"] = wrapOpenGLES<& __glGetUniformfv >::Get();}}
{static auto __glGetUniformiv = (decltype(glGetUniformiv)) procFunc( "glGetUniformiv" ); if( __glGetUniformiv ) { overrides["glGetUniformiv"] = wrapOpenGLES<& __glGetUniformiv >::Get();}}
{static auto __glGetUniformLocation = (decltype(glGetUniformLocation)) procFunc( "glGetUniformLocation" ); if( __glGetUniformLocation ) { overrides["glGetUniformLocation"] = wrapOpenGLES<& __glGetUniformLocation >::Get();}}
{static auto __glGetVertexAttribfv = (decltype(glGetVertexAttribfv)) procFunc( "glGetVertexAttribfv" ); if( __glGetVertexAttribfv ) { overrides["glGetVertexAttribfv"] = wrapOpenGLES<& __glGetVertexAttribfv >::Get();}}
{static auto __glGetVertexAttribiv = (decltype(glGetVertexAttribiv)) procFunc( "glGetVertexAttribiv" ); if( __glGetVertexAttribiv ) { overrides["glGetVertexAttribiv"] = wrapOpenGLES<& __glGetVertexAttribiv >::Get();}}
{static auto __glGetVertexAttribPointerv = (decltype(glGetVertexAttribPointerv)) procFunc( "glGetVertexAttribPointerv" ); if( __glGetVertexAttribPointerv ) { overrides["glGetVertexAttribPointerv"] = wrapOpenGLES<& __glGetVertexAttribPointerv >::Get();}}
{static auto __glHint = (decltype(glHint)) procFunc( "glHint" ); if( __glHint ) { overrides["glHint"] = wrapOpenGLES<& __glHint >::Get();}}
{static auto __glIsBuffer = (decltype(glIsBuffer)) procFunc( "glIsBuffer" ); if( __glIsBuffer ) { overrides["glIsBuffer"] = wrapOpenGLES<& __glIsBuffer >::Get();}}
{static auto __glIsEnabled = (decltype(glIsEnabled)) procFunc( "glIsEnabled" ); if( __glIsEnabled ) { overrides["glIsEnabled"] = wrapOpenGLES<& __glIsEnabled >::Get();}}
{static auto __glIsFramebuffer = (decltype(glIsFramebuffer)) procFunc( "glIsFramebuffer" ); if( __glIsFramebuffer ) { overrides["glIsFramebuffer"] = wrapOpenGLES<& __glIsFramebuffer >::Get();}}
{static auto __glIsProgram = (decltype(glIsProgram)) procFunc( "glIsProgram" ); if( __glIsProgram ) { overrides["glIsProgram"] = wrapOpenGLES<& __glIsProgram >::Get();}}
{static auto __glIsRenderbuffer = (decltype(glIsRenderbuffer)) procFunc( "glIsRenderbuffer" ); if( __glIsRenderbuffer ) { overrides["glIsRenderbuffer"] = wrapOpenGLES<& __glIsRenderbuffer >::Get();}}
{static auto __glIsShader = (decltype(glIsShader)) procFunc( "glIsShader" ); if( __glIsShader ) { overrides["glIsShader"] = wrapOpenGLES<& __glIsShader >::Get();}}
{static auto __glIsTexture = (decltype(glIsTexture)) procFunc( "glIsTexture" ); if( __glIsTexture ) { overrides["glIsTexture"] = wrapOpenGLES<& __glIsTexture >::Get();}}
{static auto __glLineWidth = (decltype(glLineWidth)) procFunc( "glLineWidth" ); if( __glLineWidth ) { overrides["glLineWidth"] = wrapOpenGLES<& __glLineWidth >::Get();}}
{static auto __glLinkProgram = (decltype(glLinkProgram)) procFunc( "glLinkProgram" ); if( __glLinkProgram ) { overrides["glLinkProgram"] = wrapOpenGLES<& __glLinkProgram >::Get();}}
{static auto __glPixelStorei = (decltype(glPixelStorei)) procFunc( "glPixelStorei" ); if( __glPixelStorei ) { overrides["glPixelStorei"] = wrapOpenGLES<& __glPixelStorei >::Get();}}
{static auto __glPolygonOffset = (decltype(glPolygonOffset)) procFunc( "glPolygonOffset" ); if( __glPolygonOffset ) { overrides["glPolygonOffset"] = wrapOpenGLES<& __glPolygonOffset >::Get();}}
{static auto __glReadPixels = (decltype(glReadPixels)) procFunc( "glReadPixels" ); if( __glReadPixels ) { overrides["glReadPixels"] = wrapOpenGLES<& __glReadPixels >::Get();}}
{static auto __glReleaseShaderCompiler = (decltype(glReleaseShaderCompiler)) procFunc( "glReleaseShaderCompiler" ); if( __glReleaseShaderCompiler ) { overrides["glReleaseShaderCompiler"] = wrapOpenGLES<& __glReleaseShaderCompiler >::Get();}}
{static auto __glRenderbufferStorage = (decltype(glRenderbufferStorage)) procFunc( "glRenderbufferStorage" ); if( __glRenderbufferStorage ) { overrides["glRenderbufferStorage"] = wrapOpenGLES<& __glRenderbufferStorage >::Get();}}
{static auto __glSampleCoverage = (decltype(glSampleCoverage)) procFunc( "glSampleCoverage" ); if( __glSampleCoverage ) { overrides["glSampleCoverage"] = wrapOpenGLES<& __glSampleCoverage >::Get();}}
{static auto __glScissor = (decltype(glScissor)) procFunc( "glScissor" ); if( __glScissor ) { overrides["glScissor"] = wrapOpenGLES<& __glScissor >::Get();}}
{static auto __glShaderBinary = (decltype(glShaderBinary)) procFunc( "glShaderBinary" ); if( __glShaderBinary ) { overrides["glShaderBinary"] = wrapOpenGLES<& __glShaderBinary >::Get();}}
{static auto __glShaderSource = (decltype(glShaderSource)) procFunc( "glShaderSource" ); if( __glShaderSource ) { overrides["glShaderSource"] = wrapOpenGLES<& __glShaderSource >::Get();}}
{static auto __glStencilFunc = (decltype(glStencilFunc)) procFunc( "glStencilFunc" ); if( __glStencilFunc ) { overrides["glStencilFunc"] = wrapOpenGLES<& __glStencilFunc >::Get();}}
{static auto __glStencilFuncSeparate = (decltype(glStencilFuncSeparate)) procFunc( "glStencilFuncSeparate" ); if( __glStencilFuncSeparate ) { overrides["glStencilFuncSeparate"] = wrapOpenGLES<& __glStencilFuncSeparate >::Get();}}
{static auto __glStencilMask = (decltype(glStencilMask)) procFunc( "glStencilMask" ); if( __glStencilMask ) { overrides["glStencilMask"] = wrapOpenGLES<& __glStencilMask >::Get();}}
{static auto __glStencilMaskSeparate = (decltype(glStencilMaskSeparate)) procFunc( "glStencilMaskSeparate" ); if( __glStencilMaskSeparate ) { overrides["glStencilMaskSeparate"] = wrapOpenGLES<& __glStencilMaskSeparate >::Get();}}
{static auto __glStencilOp = (decltype(glStencilOp)) procFunc( "glStencilOp" ); if( __glStencilOp ) { overrides["glStencilOp"] = wrapOpenGLES<& __glStencilOp >::Get();}}
{static auto __glStencilOpSeparate = (decltype(glStencilOpSeparate)) procFunc( "glStencilOpSeparate" ); if( __glStencilOpSeparate ) { overrides["glStencilOpSeparate"] = wrapOpenGLES<& __glStencilOpSeparate >::Get();}}
{static auto __glTexImage2D = (decltype(glTexImage2D)) procFunc( "glTexImage2D" ); if( __glTexImage2D ) { overrides["glTexImage2D"] = wrapOpenGLES<& __glTexImage2D >::Get();}}
{static auto __glTexParameterf = (decltype(glTexParameterf)) procFunc( "glTexParameterf" ); if( __glTexParameterf ) { overrides["glTexParameterf"] = wrapOpenGLES<& __glTexParameterf >::Get();}}
{static auto __glTexParameterfv = (decltype(glTexParameterfv)) procFunc( "glTexParameterfv" ); if( __glTexParameterfv ) { overrides["glTexParameterfv"] = wrapOpenGLES<& __glTexParameterfv >::Get();}}
{static auto __glTexParameteri = (decltype(glTexParameteri)) procFunc( "glTexParameteri" ); if( __glTexParameteri ) { overrides["glTexParameteri"] = wrapOpenGLES<& __glTexParameteri >::Get();}}
{static auto __glTexParameteriv = (decltype(glTexParameteriv)) procFunc( "glTexParameteriv" ); if( __glTexParameteriv ) { overrides["glTexParameteriv"] = wrapOpenGLES<& __glTexParameteriv >::Get();}}
{static auto __glTexSubImage2D = (decltype(glTexSubImage2D)) procFunc( "glTexSubImage2D" ); if( __glTexSubImage2D ) { overrides["glTexSubImage2D"] = wrapOpenGLES<& __glTexSubImage2D >::Get();}}
{static auto __glUniform1f = (decltype(glUniform1f)) procFunc( "glUniform1f" ); if( __glUniform1f ) { overrides["glUniform1f"] = wrapOpenGLES<& __glUniform1f >::Get();}}
{static auto __glUniform1fv = (decltype(glUniform1fv)) procFunc( "glUniform1fv" ); if( __glUniform1fv ) { overrides["glUniform1fv"] = wrapOpenGLES<& __glUniform1fv >::Get();}}
{static auto __glUniform1i = (decltype(glUniform1i)) procFunc( "glUniform1i" ); if( __glUniform1i ) { overrides["glUniform1i"] = wrapOpenGLES<& __glUniform1i >::Get();}}
{static auto __glUniform1iv = (decltype(glUniform1iv)) procFunc( "glUniform1iv" ); if( __glUniform1iv ) { overrides["glUniform1iv"] = wrapOpenGLES<& __glUniform1iv >::Get();}}
{static auto __glUniform2f = (decltype(glUniform2f)) procFunc( "glUniform2f" ); if( __glUniform2f ) { overrides["glUniform2f"] = wrapOpenGLES<& __glUniform2f >::Get();}}
{static auto __glUniform2fv = (decltype(glUniform2fv)) procFunc( "glUniform2fv" ); if( __glUniform2fv ) { overrides["glUniform2fv"] = wrapOpenGLES<& __glUniform2fv >::Get();}}
{static auto __glUniform2i = (decltype(glUniform2i)) procFunc( "glUniform2i" ); if( __glUniform2i ) { overrides["glUniform2i"] = wrapOpenGLES<& __glUniform2i >::Get();}}
{static auto __glUniform2iv = (decltype(glUniform2iv)) procFunc( "glUniform2iv" ); if( __glUniform2iv ) { overrides["glUniform2iv"] = wrapOpenGLES<& __glUniform2iv >::Get();}}
{static auto __glUniform3f = (decltype(glUniform3f)) procFunc( "glUniform3f" ); if( __glUniform3f ) { overrides["glUniform3f"] = wrapOpenGLES<& __glUniform3f >::Get();}}
{static auto __glUniform3fv = (decltype(glUniform3fv)) procFunc( "glUniform3fv" ); if( __glUniform3fv ) { overrides["glUniform3fv"] = wrapOpenGLES<& __glUniform3fv >::Get();}}
{static auto __glUniform3i = (decltype(glUniform3i)) procFunc( "glUniform3i" ); if( __glUniform3i ) { overrides["glUniform3i"] = wrapOpenGLES<& __glUniform3i >::Get();}}
{static auto __glUniform3iv = (decltype(glUniform3iv)) procFunc( "glUniform3iv" ); if( __glUniform3iv ) { overrides["glUniform3iv"] = wrapOpenGLES<& __glUniform3iv >::Get();}}
{static auto __glUniform4f = (decltype(glUniform4f)) procFunc( "glUniform4f" ); if( __glUniform4f ) { overrides["glUniform4f"] = wrapOpenGLES<& __glUniform4f >::Get();}}
{static auto __glUniform4fv = (decltype(glUniform4fv)) procFunc( "glUniform4fv" ); if( __glUniform4fv ) { overrides["glUniform4fv"] = wrapOpenGLES<& __glUniform4fv >::Get();}}
{static auto __glUniform4i = (decltype(glUniform4i)) procFunc( "glUniform4i" ); if( __glUniform4i ) { overrides["glUniform4i"] = wrapOpenGLES<& __glUniform4i >::Get();}}
{static auto __glUniform4iv = (decltype(glUniform4iv)) procFunc( "glUniform4iv" ); if( __glUniform4iv ) { overrides["glUniform4iv"] = wrapOpenGLES<& __glUniform4iv >::Get();}}
{static auto __glUniformMatrix2fv = (decltype(glUniformMatrix2fv)) procFunc( "glUniformMatrix2fv" ); if( __glUniformMatrix2fv ) { overrides["glUniformMatrix2fv"] = wrapOpenGLES<& __glUniformMatrix2fv >::Get();}}
{static auto __glUniformMatrix3fv = (decltype(glUniformMatrix3fv)) procFunc( "glUniformMatrix3fv" ); if( __glUniformMatrix3fv ) { overrides["glUniformMatrix3fv"] = wrapOpenGLES<& __glUniformMatrix3fv >::Get();}}
{static auto __glUniformMatrix4fv = (decltype(glUniformMatrix4fv)) procFunc( "glUniformMatrix4fv" ); if( __glUniformMatrix4fv ) { overrides["glUniformMatrix4fv"] = wrapOpenGLES<& __glUniformMatrix4fv >::Get();}}
{static auto __glUseProgram = (decltype(glUseProgram)) procFunc( "glUseProgram" ); if( __glUseProgram ) { overrides["glUseProgram"] = wrapOpenGLES<& __glUseProgram >::Get();}}
{static auto __glValidateProgram = (decltype(glValidateProgram)) procFunc( "glValidateProgram" ); if( __glValidateProgram ) { overrides["glValidateProgram"] = wrapOpenGLES<& __glValidateProgram >::Get();}}
{static auto __glVertexAttrib1f = (decltype(glVertexAttrib1f)) procFunc( "glVertexAttrib1f" ); if( __glVertexAttrib1f ) { overrides["glVertexAttrib1f"] = wrapOpenGLES<& __glVertexAttrib1f >::Get();}}
{static auto __glVertexAttrib1fv = (decltype(glVertexAttrib1fv)) procFunc( "glVertexAttrib1fv" ); if( __glVertexAttrib1fv ) { overrides["glVertexAttrib1fv"] = wrapOpenGLES<& __glVertexAttrib1fv >::Get();}}
{static auto __glVertexAttrib2f = (decltype(glVertexAttrib2f)) procFunc( "glVertexAttrib2f" ); if( __glVertexAttrib2f ) { overrides["glVertexAttrib2f"] = wrapOpenGLES<& __glVertexAttrib2f >::Get();}}
{static auto __glVertexAttrib2fv = (decltype(glVertexAttrib2fv)) procFunc( "glVertexAttrib2fv" ); if( __glVertexAttrib2fv ) { overrides["glVertexAttrib2fv"] = wrapOpenGLES<& __glVertexAttrib2fv >::Get();}}
{static auto __glVertexAttrib3f = (decltype(glVertexAttrib3f)) procFunc( "glVertexAttrib3f" ); if( __glVertexAttrib3f ) { overrides["glVertexAttrib3f"] = wrapOpenGLES<& __glVertexAttrib3f >::Get();}}
{static auto __glVertexAttrib3fv = (decltype(glVertexAttrib3fv)) procFunc( "glVertexAttrib3fv" ); if( __glVertexAttrib3fv ) { overrides["glVertexAttrib3fv"] = wrapOpenGLES<& __glVertexAttrib3fv >::Get();}}
{static auto __glVertexAttrib4f = (decltype(glVertexAttrib4f)) procFunc( "glVertexAttrib4f" ); if( __glVertexAttrib4f ) { overrides["glVertexAttrib4f"] = wrapOpenGLES<& __glVertexAttrib4f >::Get();}}
{static auto __glVertexAttrib4fv = (decltype(glVertexAttrib4fv)) procFunc( "glVertexAttrib4fv" ); if( __glVertexAttrib4fv ) { overrides["glVertexAttrib4fv"] = wrapOpenGLES<& __glVertexAttrib4fv >::Get();}}
{static auto __glVertexAttribPointer = (decltype(glVertexAttribPointer)) procFunc( "glVertexAttribPointer" ); if( __glVertexAttribPointer ) { overrides["glVertexAttribPointer"] = wrapOpenGLES<& __glVertexAttribPointer >::Get();}}
{static auto __glViewport = (decltype(glViewport)) procFunc( "glViewport" ); if( __glViewport ) { overrides["glViewport"] = wrapOpenGLES<& __glViewport >::Get();}}
{static auto __glAlphaFunc = (decltype(glAlphaFunc)) procFunc( "glAlphaFunc" ); if( __glAlphaFunc ) { overrides["glAlphaFunc"] = wrapOpenGLES<& __glAlphaFunc >::Get();}}
{static auto __glShadeModel = (decltype(glShadeModel)) procFunc( "glShadeModel" ); if( __glShadeModel ) { overrides["glShadeModel"] = wrapOpenGLES<& __glShadeModel >::Get();}}
{static auto __glEnableClientState = (decltype(glEnableClientState)) procFunc( "glEnableClientState" ); if( __glEnableClientState ) { overrides["glEnableClientState"] = wrapOpenGLES<& __glEnableClientState >::Get();}}
{static auto __glLightModelf = (decltype(glLightModelf)) procFunc( "glLightModelf" ); if( __glLightModelf ) { overrides["glLightModelf"] = wrapOpenGLES<& __glLightModelf >::Get();}}
{static auto __glColor4f = (decltype(glColor4f)) procFunc( "glColor4f" ); if( __glColor4f ) { overrides["glColor4f"] = wrapOpenGLES<& __glColor4f >::Get();}}
{static auto __glPushMatrix = (decltype(glPushMatrix)) procFunc( "glPushMatrix" ); if( __glPushMatrix ) { overrides["glPushMatrix"] = wrapOpenGLES<& __glPushMatrix >::Get();}}
{static auto __glTranslatef = (decltype(glTranslatef)) procFunc( "glTranslatef" ); if( __glTranslatef ) { overrides["glTranslatef"] = wrapOpenGLES<& __glTranslatef >::Get();}}
{static auto __glPopMatrix = (decltype(glPopMatrix)) procFunc( "glPopMatrix" ); if( __glPopMatrix ) { overrides["glPopMatrix"] = wrapOpenGLES<& __glPopMatrix >::Get();}}
{static auto __glDisableClientState = (decltype(glDisableClientState)) procFunc( "glDisableClientState" ); if( __glDisableClientState ) { overrides["glDisableClientState"] = wrapOpenGLES<& __glDisableClientState >::Get();}}
{static auto __glMatrixMode = (decltype(glMatrixMode)) procFunc( "glMatrixMode" ); if( __glMatrixMode ) { overrides["glMatrixMode"] = wrapOpenGLES<& __glMatrixMode >::Get();}}
{static auto __glScalef = (decltype(glScalef)) procFunc( "glScalef" ); if( __glScalef ) { overrides["glScalef"] = wrapOpenGLES<& __glScalef >::Get();}}
{static auto __glRotatef = (decltype(glRotatef)) procFunc( "glRotatef" ); if( __glRotatef ) { overrides["glRotatef"] = wrapOpenGLES<& __glRotatef >::Get();}}
{static auto __glLoadIdentity = (decltype(glLoadIdentity)) procFunc( "glLoadIdentity" ); if( __glLoadIdentity ) { overrides["glLoadIdentity"] = wrapOpenGLES<& __glLoadIdentity >::Get();}}
{static auto __glLightfv = (decltype(glLightfv)) procFunc( "glLightfv" ); if( __glLightfv ) { overrides["glLightfv"] = wrapOpenGLES<& __glLightfv >::Get();}}
{static auto __glVertexPointer = (decltype(glVertexPointer)) procFunc( "glVertexPointer" ); if( __glVertexPointer ) { overrides["glVertexPointer"] = wrapOpenGLES<& __glVertexPointer >::Get();}}
{static auto __glTexCoordPointer = (decltype(glTexCoordPointer)) procFunc( "glTexCoordPointer" ); if( __glTexCoordPointer ) { overrides["glTexCoordPointer"] = wrapOpenGLES<& __glTexCoordPointer >::Get();}}
{static auto __glColorPointer = (decltype(glColorPointer)) procFunc( "glColorPointer" ); if( __glColorPointer ) { overrides["glColorPointer"] = wrapOpenGLES<& __glColorPointer >::Get();}}
{static auto __glNormalPointer = (decltype(glNormalPointer)) procFunc( "glNormalPointer" ); if( __glNormalPointer ) { overrides["glNormalPointer"] = wrapOpenGLES<& __glNormalPointer >::Get();}}
{static auto __glFogfv = (decltype(glFogfv)) procFunc( "glFogfv" ); if( __glFogfv ) { overrides["glFogfv"] = wrapOpenGLES<& __glFogfv >::Get();}}
{static auto __glFogf = (decltype(glFogf)) procFunc( "glFogf" ); if( __glFogf ) { overrides["glFogf"] = wrapOpenGLES<& __glFogf >::Get();}}
{static auto __glMultMatrixf = (decltype(glMultMatrixf)) procFunc( "glMultMatrixf" ); if( __glMultMatrixf ) { overrides["glMultMatrixf"] = wrapOpenGLES<& __glMultMatrixf >::Get();}}
{static auto __glVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC) procFunc( "glVertexAttribIPointer" ); if( __glVertexAttribIPointer ) { overrides["glVertexAttribIPointer"] = wrapOpenGLES<& __glVertexAttribIPointer >::Get();}};
{static auto __glGetInternalformativ = (PFNGLGETINTERNALFORMATIVPROC) procFunc( "glGetInternalformativ" ); if( __glGetInternalformativ ) { overrides["glGetInternalformativ"] = wrapOpenGLES<& __glGetInternalformativ >::Get();}};
{static auto __glGetInternalformati64v = (PFNGLGETINTERNALFORMATI64VPROC) procFunc( "glGetInternalformati64v" ); if( __glGetInternalformati64v ) { overrides["glGetInternalformati64v"] = wrapOpenGLES<& __glGetInternalformati64v >::Get();}};
{static auto __glGetTranslatedShaderSourceANGLE = (PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC) procFunc( "glGetTranslatedShaderSourceANGLE" ); if( __glGetTranslatedShaderSourceANGLE ) { overrides["glGetTranslatedShaderSourceANGLE"] = wrapOpenGLES<& __glGetTranslatedShaderSourceANGLE >::Get();}};
{static auto __glFramebufferTexture2DMultisampleEXT = (PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC) procFunc( "glFramebufferTexture2DMultisampleEXT" ); if( __glFramebufferTexture2DMultisampleEXT ) { overrides["glFramebufferTexture2DMultisampleEXT"] = wrapOpenGLES<& __glFramebufferTexture2DMultisampleEXT >::Get();}};
{static auto __glPointSize = (PFNGLPOINTSIZEPROC) procFunc( "glPointSize" ); if( __glPointSize ) { overrides["glPointSize"] = wrapOpenGLES<& __glPointSize >::Get();}};
{static auto __glPolygonMode = (PFNGLPOLYGONMODEPROC) procFunc( "glPolygonMode" ); if( __glPolygonMode ) { overrides["glPolygonMode"] = wrapOpenGLES<& __glPolygonMode >::Get();}};
{static auto __glBlitFramebufferANGLE = (PFNGLBLITFRAMEBUFFERPROC) procFunc( "glBlitFramebufferANGLE" ); if( __glBlitFramebufferANGLE ) { overrides["glBlitFramebufferANGLE"] = wrapOpenGLES<& __glBlitFramebufferANGLE >::Get();}};
{static auto __glRenderbufferStorageMultisampleANGLE = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) procFunc( "glRenderbufferStorageMultisampleANGLE" ); if( __glRenderbufferStorageMultisampleANGLE ) { overrides["glRenderbufferStorageMultisampleANGLE"] = wrapOpenGLES<& __glRenderbufferStorageMultisampleANGLE >::Get();}};
{static auto __glCopyImageSubDataEXT = (PFNGLCOPYIMAGESUBDATAPROC) procFunc( "glCopyImageSubDataEXT" ); if( __glCopyImageSubDataEXT ) { overrides["glCopyImageSubDataEXT"] = wrapOpenGLES<& __glCopyImageSubDataEXT >::Get();}};
{static auto __glDebugMessageControlKHR = (PFNGLDEBUGMESSAGECONTROLPROC) procFunc( "glDebugMessageControlKHR" ); if( __glDebugMessageControlKHR ) { overrides["glDebugMessageControlKHR"] = wrapOpenGLES<& __glDebugMessageControlKHR >::Get();}};
{static auto __glDebugMessageInsertKHR = (PFNGLDEBUGMESSAGEINSERTPROC) procFunc( "glDebugMessageInsertKHR" ); if( __glDebugMessageInsertKHR ) { overrides["glDebugMessageInsertKHR"] = wrapOpenGLES<& __glDebugMessageInsertKHR >::Get();}};
{static auto __glDebugMessageCallbackKHR = (PFNGLDEBUGMESSAGECALLBACKPROC) procFunc( "glDebugMessageCallbackKHR" ); if( __glDebugMessageCallbackKHR ) { overrides["glDebugMessageCallbackKHR"] = wrapOpenGLES<& __glDebugMessageCallbackKHR >::Get();}};
{static auto __glGetDebugMessageLogKHR = (PFNGLGETDEBUGMESSAGELOGPROC) procFunc( "glGetDebugMessageLogKHR" ); if( __glGetDebugMessageLogKHR ) { overrides["glGetDebugMessageLogKHR"] = wrapOpenGLES<& __glGetDebugMessageLogKHR >::Get();}};
{static auto __glGetCompressedTexImageXXXXX = (PFNGLGETCOMPRESSEDTEXIMAGEPROC) procFunc( "glGetCompressedTexImageXXXXX" ); if( __glGetCompressedTexImageXXXXX ) { overrides["glGetCompressedTexImageXXXXX"] = wrapOpenGLES<& __glGetCompressedTexImageXXXXX >::Get();}};
{static auto __glGetTexImageXXXXX = (PFNGLGETTEXIMAGEPROC) procFunc( "glGetTexImageXXXXX" ); if( __glGetTexImageXXXXX ) { overrides["glGetTexImageXXXXX"] = wrapOpenGLES<& __glGetTexImageXXXXX >::Get();}};
{static auto __glVertexAttribDivisorNV = (PFNGLVERTEXATTRIBDIVISORPROC) procFunc( "glVertexAttribDivisorNV" ); if( __glVertexAttribDivisorNV ) { overrides["glVertexAttribDivisorNV"] = wrapOpenGLES<& __glVertexAttribDivisorNV >::Get();}};
{static auto __glDrawArraysInstancedNV = (PFNGLDRAWARRAYSINSTANCEDPROC) procFunc( "glDrawArraysInstancedNV" ); if( __glDrawArraysInstancedNV ) { overrides["glDrawArraysInstancedNV"] = wrapOpenGLES<& __glDrawArraysInstancedNV >::Get();}};
{static auto __glDrawElementsInstancedNV = (PFNGLDRAWELEMENTSINSTANCEDPROC) procFunc( "glDrawElementsInstancedNV" ); if( __glDrawElementsInstancedNV ) { overrides["glDrawElementsInstancedNV"] = wrapOpenGLES<& __glDrawElementsInstancedNV >::Get();}};
{static auto __glGetStringi = (PFNGLGETSTRINGIPROC) procFunc( "glGetStringi" ); if( __glGetStringi ) { overrides["glGetStringi"] = wrapOpenGLES<& __glGetStringi >::Get();}};
{static auto __glTexImage3DOES = (PFNGLTEXIMAGE3DPROC) procFunc( "glTexImage3DOES" ); if( __glTexImage3DOES ) { overrides["glTexImage3DOES"] = wrapOpenGLES<& __glTexImage3DOES >::Get();}};
{static auto __glTexSubImage3DOES = (PFNGLTEXSUBIMAGE3DPROC) procFunc( "glTexSubImage3DOES" ); if( __glTexSubImage3DOES ) { overrides["glTexSubImage3DOES"] = wrapOpenGLES<& __glTexSubImage3DOES >::Get();}};
{static auto __glCompressedTexImage3DOES = (PFNGLCOMPRESSEDTEXIMAGE3DPROC) procFunc( "glCompressedTexImage3DOES" ); if( __glCompressedTexImage3DOES ) { overrides["glCompressedTexImage3DOES"] = wrapOpenGLES<& __glCompressedTexImage3DOES >::Get();}};
{static auto __glCompressedTexSubImage3DOES = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) procFunc( "glCompressedTexSubImage3DOES" ); if( __glCompressedTexSubImage3DOES ) { overrides["glCompressedTexSubImage3DOES"] = wrapOpenGLES<& __glCompressedTexSubImage3DOES >::Get();}};
{static auto __glTexStorage2DEXT = (PFNGLTEXSTORAGE2DPROC) procFunc( "glTexStorage2DEXT" ); if( __glTexStorage2DEXT ) { overrides["glTexStorage2DEXT"] = wrapOpenGLES<& __glTexStorage2DEXT >::Get();}};
{static auto __glTexStorage3DEXT = (PFNGLTEXSTORAGE3DPROC) procFunc( "glTexStorage3DEXT" ); if( __glTexStorage3DEXT ) { overrides["glTexStorage3DEXT"] = wrapOpenGLES<& __glTexStorage3DEXT >::Get();}};
{static auto __glTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC) procFunc( "glTexImage2DMultisample" ); if( __glTexImage2DMultisample ) { overrides["glTexImage2DMultisample"] = wrapOpenGLES<& __glTexImage2DMultisample >::Get();}};
{static auto __glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC) procFunc( "glTexImage3DMultisample" ); if( __glTexImage3DMultisample ) { overrides["glTexImage3DMultisample"] = wrapOpenGLES<& __glTexImage3DMultisample >::Get();}};
{static auto __glFramebufferTextureEXT = (PFNGLFRAMEBUFFERTEXTUREPROC) procFunc( "glFramebufferTextureEXT" ); if( __glFramebufferTextureEXT ) { overrides["glFramebufferTextureEXT"] = wrapOpenGLES<& __glFramebufferTextureEXT >::Get();}};
{static auto __glFramebufferTextureLayerEXT = (PFNGLFRAMEBUFFERTEXTURELAYERPROC) procFunc( "glFramebufferTextureLayerEXT" ); if( __glFramebufferTextureLayerEXT ) { overrides["glFramebufferTextureLayerEXT"] = wrapOpenGLES<& __glFramebufferTextureLayerEXT >::Get();}};
{static auto __glInsertEventMarkerEXT = (PFNGLINSERTEVENTMARKEREXTPROC) procFunc( "glInsertEventMarkerEXT" ); if( __glInsertEventMarkerEXT ) { overrides["glInsertEventMarkerEXT"] = wrapOpenGLES<& __glInsertEventMarkerEXT >::Get();}};
{static auto __glProvokingVertexARB = (PFNGLPROVOKINGVERTEXPROC) procFunc( "glProvokingVertexARB" ); if( __glProvokingVertexARB ) { overrides["glProvokingVertexARB"] = wrapOpenGLES<& __glProvokingVertexARB >::Get();}};
{static auto __glPushDebugGroupARB = (PFNGLPUSHDEBUGGROUPPROC) procFunc( "glPushDebugGroupARB" ); if( __glPushDebugGroupARB ) { overrides["glPushDebugGroupARB"] = wrapOpenGLES<& __glPushDebugGroupARB >::Get();}};
{static auto __glPopDebugGroupARB = (PFNGLPOPDEBUGGROUPPROC) procFunc( "glPopDebugGroupARB" ); if( __glPopDebugGroupARB ) { overrides["glPopDebugGroupARB"] = wrapOpenGLES<& __glPopDebugGroupARB >::Get();}};
{static auto __glPushGroupMarkerEXT = (PFNGLPUSHGROUPMARKEREXTPROC) procFunc( "glPushGroupMarkerEXT" ); if( __glPushGroupMarkerEXT ) { overrides["glPushGroupMarkerEXT"] = wrapOpenGLES<& __glPushGroupMarkerEXT >::Get();}};
{static auto __glPopGroupMarkerEXT = (PFNGLPOPGROUPMARKEREXTPROC) procFunc( "glPopGroupMarkerEXT" ); if( __glPopGroupMarkerEXT ) { overrides["glPopGroupMarkerEXT"] = wrapOpenGLES<& __glPopGroupMarkerEXT >::Get();}};
{static auto __glObjectLabelEXT = (PFNGLOBJECTLABELPROC) procFunc( "glObjectLabelEXT" ); if( __glObjectLabelEXT ) { overrides["glObjectLabelEXT"] = wrapOpenGLES<& __glObjectLabelEXT >::Get();}};
{static auto __glDrawArraysIndirectEXT = (PFNGLDRAWARRAYSINDIRECTPROC) procFunc( "glDrawArraysIndirectEXT" ); if( __glDrawArraysIndirectEXT ) { overrides["glDrawArraysIndirectEXT"] = wrapOpenGLES<& __glDrawArraysIndirectEXT >::Get();}};
{static auto __glDrawElementsIndirectEXT = (PFNGLDRAWELEMENTSINDIRECTPROC) procFunc( "glDrawElementsIndirectEXT" ); if( __glDrawElementsIndirectEXT ) { overrides["glDrawElementsIndirectEXT"] = wrapOpenGLES<& __glDrawElementsIndirectEXT >::Get();}};
{static auto __glMultiDrawArraysIndirectEXT = (PFNGLMULTIDRAWARRAYSINDIRECTPROC) procFunc( "glMultiDrawArraysIndirectEXT" ); if( __glMultiDrawArraysIndirectEXT ) { overrides["glMultiDrawArraysIndirectEXT"] = wrapOpenGLES<& __glMultiDrawArraysIndirectEXT >::Get();}};
{static auto __glMultiDrawElementsIndirectEXT = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC) procFunc( "glMultiDrawElementsIndirectEXT" ); if( __glMultiDrawElementsIndirectEXT ) { overrides["glMultiDrawElementsIndirectEXT"] = wrapOpenGLES<& __glMultiDrawElementsIndirectEXT >::Get();}};
{static auto __glMultiDrawArraysIndirectCountEXT = (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC) procFunc( "glMultiDrawArraysIndirectCountEXT" ); if( __glMultiDrawArraysIndirectCountEXT ) { overrides["glMultiDrawArraysIndirectCountEXT"] = wrapOpenGLES<& __glMultiDrawArraysIndirectCountEXT >::Get();}};
{static auto __glMultiDrawElementsIndirectCountEXT = (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC) procFunc( "glMultiDrawElementsIndirectCountEXT" ); if( __glMultiDrawElementsIndirectCountEXT ) { overrides["glMultiDrawElementsIndirectCountEXT"] = wrapOpenGLES<& __glMultiDrawElementsIndirectCountEXT >::Get();}};
{static auto __glGetProgramBinaryOES = (PFNGLGETPROGRAMBINARYPROC) procFunc( "glGetProgramBinaryOES" ); if( __glGetProgramBinaryOES ) { overrides["glGetProgramBinaryOES"] = wrapOpenGLES<& __glGetProgramBinaryOES >::Get();}};
{static auto __glProgramBinaryOES = (PFNGLPROGRAMBINARYPROC) procFunc( "glProgramBinaryOES" ); if( __glProgramBinaryOES ) { overrides["glProgramBinaryOES"] = wrapOpenGLES<& __glProgramBinaryOES >::Get();}};
{static auto __glVertexAttribDivisorOES = (PFNGLVERTEXATTRIBDIVISORPROC) procFunc( "glVertexAttribDivisorOES" ); if( __glVertexAttribDivisorOES ) { overrides["glVertexAttribDivisorOES"] = wrapOpenGLES<& __glVertexAttribDivisorOES >::Get();}};
{static auto __glDrawArraysInstancedOES = (PFNGLDRAWARRAYSINSTANCEDPROC) procFunc( "glDrawArraysInstancedOES" ); if( __glDrawArraysInstancedOES ) { overrides["glDrawArraysInstancedOES"] = wrapOpenGLES<& __glDrawArraysInstancedOES >::Get();}};
{static auto __glDrawElementsInstancedOES = (PFNGLDRAWELEMENTSINSTANCEDPROC) procFunc( "glDrawElementsInstancedOES" ); if( __glDrawElementsInstancedOES ) { overrides["glDrawElementsInstancedOES"] = wrapOpenGLES<& __glDrawElementsInstancedOES >::Get();}};
{static auto __glBindVertexArrayOES = (PFNGLBINDVERTEXARRAYPROC) procFunc( "glBindVertexArrayOES" ); if( __glBindVertexArrayOES ) { overrides["glBindVertexArrayOES"] = wrapOpenGLES<& __glBindVertexArrayOES >::Get();}};
{static auto __glDeleteVertexArraysOES = (PFNGLDELETEVERTEXARRAYSPROC) procFunc( "glDeleteVertexArraysOES" ); if( __glDeleteVertexArraysOES ) { overrides["glDeleteVertexArraysOES"] = wrapOpenGLES<& __glDeleteVertexArraysOES >::Get();}};
{static auto __glGenVertexArraysOES = (PFNGLGENVERTEXARRAYSPROC) procFunc( "glGenVertexArraysOES" ); if( __glGenVertexArraysOES ) { overrides["glGenVertexArraysOES"] = wrapOpenGLES<& __glGenVertexArraysOES >::Get();}};
{static auto __glClipControlXXXXX = (PFNGLCLIPCONTROLPROC) procFunc( "glClipControlXXXXX" ); if( __glClipControlXXXXX ) { overrides["glClipControlXXXXX"] = wrapOpenGLES<& __glClipControlXXXXX >::Get();}};
{static auto __glEnableiXXXXX = (PFNGLENABLEIPROC) procFunc( "glEnableiXXXXX" ); if( __glEnableiXXXXX ) { overrides["glEnableiXXXXX"] = wrapOpenGLES<& __glEnableiXXXXX >::Get();}};
{static auto __glDisableiXXXXX = (PFNGLDISABLEIPROC) procFunc( "glDisableiXXXXX" ); if( __glDisableiXXXXX ) { overrides["glDisableiXXXXX"] = wrapOpenGLES<& __glDisableiXXXXX >::Get();}};
{static auto __glBlendEquationiXXXXX = (PFNGLBLENDEQUATIONIPROC) procFunc( "glBlendEquationiXXXXX" ); if( __glBlendEquationiXXXXX ) { overrides["glBlendEquationiXXXXX"] = wrapOpenGLES<& __glBlendEquationiXXXXX >::Get();}};
{static auto __glBlendEquationSeparateiXXXXX = (PFNGLBLENDEQUATIONSEPARATEIPROC) procFunc( "glBlendEquationSeparateiXXXXX" ); if( __glBlendEquationSeparateiXXXXX ) { overrides["glBlendEquationSeparateiXXXXX"] = wrapOpenGLES<& __glBlendEquationSeparateiXXXXX >::Get();}};
{static auto __glBlendFunciXXXXX = (PFNGLBLENDFUNCIPROC) procFunc( "glBlendFunciXXXXX" ); if( __glBlendFunciXXXXX ) { overrides["glBlendFunciXXXXX"] = wrapOpenGLES<& __glBlendFunciXXXXX >::Get();}};
{static auto __glBlendFuncSeparateiXXXXX = (PFNGLBLENDFUNCSEPARATEIPROC) procFunc( "glBlendFuncSeparateiXXXXX" ); if( __glBlendFuncSeparateiXXXXX ) { overrides["glBlendFuncSeparateiXXXXX"] = wrapOpenGLES<& __glBlendFuncSeparateiXXXXX >::Get();}};
{static auto __glDrawBuffer = (PFNGLDRAWBUFFERPROC) procFunc( "glDrawBuffer" ); if( __glDrawBuffer ) { overrides["glDrawBuffer"] = wrapOpenGLES<& __glDrawBuffer >::Get();}};
{static auto __glReadBuffer = (PFNGLREADBUFFERPROC) procFunc( "glReadBuffer" ); if( __glReadBuffer ) { overrides["glReadBuffer"] = wrapOpenGLES<& __glReadBuffer >::Get();}};
{static auto __glGenSamplers = (PFNGLGENSAMPLERSPROC) procFunc( "glGenSamplers" ); if( __glGenSamplers ) { overrides["glGenSamplers"] = wrapOpenGLES<& __glGenSamplers >::Get();}};
{static auto __glDeleteSamplers = (PFNGLDELETESAMPLERSPROC) procFunc( "glDeleteSamplers" ); if( __glDeleteSamplers ) { overrides["glDeleteSamplers"] = wrapOpenGLES<& __glDeleteSamplers >::Get();}};
{static auto __glBindSampler = (PFNGLBINDSAMPLERPROC) procFunc( "glBindSampler" ); if( __glBindSampler ) { overrides["glBindSampler"] = wrapOpenGLES<& __glBindSampler >::Get();}};
{static auto __glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC) procFunc( "glSamplerParameterf" ); if( __glSamplerParameterf ) { overrides["glSamplerParameterf"] = wrapOpenGLES<& __glSamplerParameterf >::Get();}};
{static auto __glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC) procFunc( "glSamplerParameteri" ); if( __glSamplerParameteri ) { overrides["glSamplerParameteri"] = wrapOpenGLES<& __glSamplerParameteri >::Get();}};
{static auto __glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC) procFunc( "glSamplerParameterfv" ); if( __glSamplerParameterfv ) { overrides["glSamplerParameterfv"] = wrapOpenGLES<& __glSamplerParameterfv >::Get();}};
{static auto __glBindBufferBaseXXXXX = (PFNGLBINDBUFFERBASEPROC) procFunc( "glBindBufferBaseXXXXX" ); if( __glBindBufferBaseXXXXX ) { overrides["glBindBufferBaseXXXXX"] = wrapOpenGLES<& __glBindBufferBaseXXXXX >::Get();}};
{static auto __glBindBufferRangeXXXXX = (PFNGLBINDBUFFERRANGEPROC) procFunc( "glBindBufferRangeXXXXX" ); if( __glBindBufferRangeXXXXX ) { overrides["glBindBufferRangeXXXXX"] = wrapOpenGLES<& __glBindBufferRangeXXXXX >::Get();}};
{static auto __glBindImageTextureXXXXX = (PFNGLBINDIMAGETEXTUREPROC) procFunc( "glBindImageTextureXXXXX" ); if( __glBindImageTextureXXXXX ) { overrides["glBindImageTextureXXXXX"] = wrapOpenGLES<& __glBindImageTextureXXXXX >::Get();}};
{static auto __glGetProgramInterfaceivXXXXX = (PFNGLGETPROGRAMINTERFACEIVPROC) procFunc( "glGetProgramInterfaceivXXXXX" ); if( __glGetProgramInterfaceivXXXXX ) { overrides["glGetProgramInterfaceivXXXXX"] = wrapOpenGLES<& __glGetProgramInterfaceivXXXXX >::Get();}};
{static auto __glGetProgramResourceIndexXXXXX = (PFNGLGETPROGRAMRESOURCEINDEXPROC) procFunc( "glGetProgramResourceIndexXXXXX" ); if( __glGetProgramResourceIndexXXXXX ) { overrides["glGetProgramResourceIndexXXXXX"] = wrapOpenGLES<& __glGetProgramResourceIndexXXXXX >::Get();}};
{static auto __glGetProgramResourceivXXXXX = (PFNGLGETPROGRAMRESOURCEIVPROC) procFunc( "glGetProgramResourceivXXXXX" ); if( __glGetProgramResourceivXXXXX ) { overrides["glGetProgramResourceivXXXXX"] = wrapOpenGLES<& __glGetProgramResourceivXXXXX >::Get();}};
{static auto __glGetProgramResourceNameXXXXX = (PFNGLGETPROGRAMRESOURCENAMEPROC) procFunc( "glGetProgramResourceNameXXXXX" ); if( __glGetProgramResourceNameXXXXX ) { overrides["glGetProgramResourceNameXXXXX"] = wrapOpenGLES<& __glGetProgramResourceNameXXXXX >::Get();}};
{static auto __glGetProgramResourceLocationXXXXX = (PFNGLGETPROGRAMRESOURCELOCATIONPROC) procFunc( "glGetProgramResourceLocationXXXXX" ); if( __glGetProgramResourceLocationXXXXX ) { overrides["glGetProgramResourceLocationXXXXX"] = wrapOpenGLES<& __glGetProgramResourceLocationXXXXX >::Get();}};
{static auto __glGetProgramResourceLocationIndexXXXXX = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) procFunc( "glGetProgramResourceLocationIndexXXXXX" ); if( __glGetProgramResourceLocationIndexXXXXX ) { overrides["glGetProgramResourceLocationIndexXXXXX"] = wrapOpenGLES<& __glGetProgramResourceLocationIndexXXXXX >::Get();}};
{static auto __glMemoryBarrierXXXXX = (PFNGLMEMORYBARRIERPROC) procFunc( "glMemoryBarrierXXXXX" ); if( __glMemoryBarrierXXXXX ) { overrides["glMemoryBarrierXXXXX"] = wrapOpenGLES<& __glMemoryBarrierXXXXX >::Get();}};
{static auto __glDispatchComputeXXXXX = (PFNGLDISPATCHCOMPUTEPROC) procFunc( "glDispatchComputeXXXXX" ); if( __glDispatchComputeXXXXX ) { overrides["glDispatchComputeXXXXX"] = wrapOpenGLES<& __glDispatchComputeXXXXX >::Get();}};
{static auto __glDispatchComputeIndirectXXXXX = (PFNGLDISPATCHCOMPUTEINDIRECTPROC) procFunc( "glDispatchComputeIndirectXXXXX" ); if( __glDispatchComputeIndirectXXXXX ) { overrides["glDispatchComputeIndirectXXXXX"] = wrapOpenGLES<& __glDispatchComputeIndirectXXXXX >::Get();}};
{static auto __glDrawBuffersNV = (PFNGLDRAWBUFFERSPROC) procFunc( "glDrawBuffersNV" ); if( __glDrawBuffersNV ) { overrides["glDrawBuffersNV"] = wrapOpenGLES<& __glDrawBuffersNV >::Get();}};
{static auto __glGenQueriesNV = (PFNGLGENQUERIESPROC) procFunc( "glGenQueriesNV" ); if( __glGenQueriesNV ) { overrides["glGenQueriesNV"] = wrapOpenGLES<& __glGenQueriesNV >::Get();}};
{static auto __glDeleteQueriesNV = (PFNGLDELETEQUERIESPROC) procFunc( "glDeleteQueriesNV" ); if( __glDeleteQueriesNV ) { overrides["glDeleteQueriesNV"] = wrapOpenGLES<& __glDeleteQueriesNV >::Get();}};
{static auto __glBeginQueryNV = (PFNGLBEGINQUERYPROC) procFunc( "glBeginQueryNV" ); if( __glBeginQueryNV ) { overrides["glBeginQueryNV"] = wrapOpenGLES<& __glBeginQueryNV >::Get();}};
{static auto __glEndQueryNV = (PFNGLENDQUERYPROC) procFunc( "glEndQueryNV" ); if( __glEndQueryNV ) { overrides["glEndQueryNV"] = wrapOpenGLES<& __glEndQueryNV >::Get();}};
{static auto __glGetQueryObjectivNV = (PFNGLGETQUERYOBJECTIVPROC) procFunc( "glGetQueryObjectivNV" ); if( __glGetQueryObjectivNV ) { overrides["glGetQueryObjectivNV"] = wrapOpenGLES<& __glGetQueryObjectivNV >::Get();}};
{static auto __glGetQueryObjectui64vNV = (PFNGLGETQUERYOBJECTUI64VPROC) procFunc( "glGetQueryObjectui64vNV" ); if( __glGetQueryObjectui64vNV ) { overrides["glGetQueryObjectui64vNV"] = wrapOpenGLES<& __glGetQueryObjectui64vNV >::Get();}};
{static auto __glQueryCounterNV = (PFNGLQUERYCOUNTERPROC) procFunc( "glQueryCounterNV" ); if( __glQueryCounterNV ) { overrides["glQueryCounterNV"] = wrapOpenGLES<& __glQueryCounterNV >::Get();}};
{static auto __glDiscardFramebufferEXT = (PFNGLINVALIDATEFRAMEBUFFERPROC) procFunc( "glDiscardFramebufferEXT" ); if( __glDiscardFramebufferEXT ) { overrides["glDiscardFramebufferEXT"] = wrapOpenGLES<& __glDiscardFramebufferEXT >::Get();}};

